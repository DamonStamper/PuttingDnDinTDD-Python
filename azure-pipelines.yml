# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - '*'

variables:
  sonarcloudServiceConnection: 'SonarCloudConnection'
  sonarcloudOrganization: 'damonstamper'
  sonarcloudProjectName: 'putting-dnd-in-tdd-python'
  sonarcloudProjectKey: 'putting-dnd-in-tdd-python'

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
#    Python36:
#      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  displayName: 'Prep -Use Python $(python.version)'
  inputs:
    versionSpec: '$(python.version)'

- task: SonarCloudPrepare@1
  displayName: Prep - Configure SonarCloud
  inputs:
    SonarCloud: $(sonarcloudServiceConnection)
    organization: $(sonarcloudOrganization)
    projectKey: $(sonarcloudProjectKey)
    projectName: $(sonarcloudProjectName)
    scannerMode: 'CLI'
    configMode: 'file'
    configFile: sonar-project.properties

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Build - Install dependencies'

- script: |
    pip install pytest-azurepipelines
    pytest --junitxml=junit.xml --cov-config=setup.cfg --cov-report=xml --cov=DnDinTDD ./**/*.py
  displayName: 'Build - test via pytest'

- script: |
    ls -lha
    cat junit.xml
  displayName: 'DEBUG - LS root dir and cat coverage'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: 'coverage.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: SonarCloudAnalyze@1
  displayName: Build - Analyze code coverage for SonarCloud

- task: SonarCloudPublish@1
  displayName: Build - Publish code coverage to SonarCloud
  inputs:
    pollingTimeoutSec: '300'